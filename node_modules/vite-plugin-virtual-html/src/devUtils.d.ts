import { PageObject, VirtualHtmlPage, VirtualHtmlTemplateData, VirtualHtmlTemplateRender } from './types';
/**
 * generate URL
 * @param url
 */
export declare function generateUrl(url?: string): string;
/**
 * read HTML file from disk and generate code from template system(with render function)
 * @param template
 * @param data
 * @param render
 */
export declare function readHtml({ template, data, render }: PageObject): Promise<string>;
/**
 * render template
 * @param templatePath
 * @param render
 * @param data
 */
export declare function renderTemplate(templatePath: string, render: VirtualHtmlTemplateRender, data: VirtualHtmlTemplateData): Promise<string>;
/**
 * read html file's content to render with render function
 * @param templatePath
 */
export declare function readTemplate(templatePath: string): Promise<string>;
/**
 * generate page option from string/object to object
 * @param page
 * @param globalData
 * @param globalRender
 */
export declare function generatePageOptions(page: VirtualHtmlPage, globalData: Record<string, unknown>, globalRender: VirtualHtmlTemplateRender): Promise<PageObject>;
